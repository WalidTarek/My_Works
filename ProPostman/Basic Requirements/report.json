{
  "collection": {
    "_": {
      "postman_id": "3010170d-c7b1-4c3b-96e4-20f2afce17a2",
      "exporter_id": "26052351"
    },
    "item": [
      {
        "id": "3c73eef3-a073-4c5f-85b6-107bcf7fed0c",
        "name": "GET",
        "item": [
          {
            "id": "0ca2b516-4cb7-44b8-b373-2007eb72c236",
            "name": "get queryParam",
            "request": {
              "url": {
                "protocol": "https",
                "path": [
                  "get"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2\n"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f4307e9a-e69c-411d-b79d-a6a1e302ff80",
                  "type": "text/javascript",
                  "exec": [
                    "////1\r",
                    "pm.test(\"check Status code is 200\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "///2\r",
                    "pm.test(\"check the args foo2 \", function () {\r",
                    "    var jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData.args.foo2).to.eql(\"bar2\\n\");\r",
                    "});\r",
                    "///3\r",
                    "pm.test(\"check the args foo1\", function () {\r",
                    "    var jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData.args.foo1).to.eql(\"bar1\");\r",
                    "});\r",
                    "///4\r",
                    "pm.test(\"check the url  \", function () {\r",
                    "    var jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData.url).to.eql( \"https://postman-echo.com/get?foo1=bar1&foo2=bar2%0A\");\r",
                    "});\r",
                    "///5\r",
                    "pm.test(\"check the headers host \", function () {\r",
                    "    var jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData.headers.host).to.eql(\"postman-echo.com\");\r",
                    "});\r",
                    "///6\r",
                    "var jsonData=pm.response.json()\r",
                    "var cookie =jsonData.headers.cookie\r",
                    "pm.test(\"check the headers cookie\", function () {\r",
                    "    var jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData.headers.cookie).to.eql(cookie);\r",
                    "});\r",
                    "///7\r",
                    "var token =jsonData.headers.postman-token\r",
                    "pm.test(\"check the headers postman-token \", function () {\r",
                    "    var jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData.headers.postman-token).to.eql(token);\r",
                    "});\r",
                    "///8\r",
                    "pm.test(\"check if the response contains x-amzn-trace-id\", function () {\r",
                    "    pm.expect(pm.response.text()).to.include(\"x-amzn-trace-id\");\r",
                    "});\r",
                    "///9\r",
                    "var idTrace = pm.response.headers.get(\"hox-amzn-trace-id\");\r",
                    "pm.test(\"check traceId Headers\", function () {\r",
                    "    var jsonData = pm.response.json();\r",
                    "    pm.expect(pm.response.headers.get(\"hox-amzn-trace-id\")).to.eql(idTrace);\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "5bbc17fa-27ea-4972-a8a5-8add47294fbb"
                }
              }
            ]
          },
          {
            "id": "f5e1dee9-015e-4f30-b264-08ca678daefd",
            "name": "Get Auth status 401",
            "request": {
              "url": {
                "protocol": "https",
                "path": [
                  "basic-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "basic",
                "basic": [
                  {
                    "type": "string",
                    "value": "fsdfs",
                    "key": "password"
                  },
                  {
                    "type": "string",
                    "value": "postman",
                    "key": "username"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f8139261-ff78-42ce-a044-c75946ed060f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 401\", function () {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});"
                  ],
                  "_lastExecutionId": "9ee977ee-4efb-41c3-ad3e-fbf6078ff505"
                }
              }
            ]
          },
          {
            "id": "d4d80458-325e-447b-96a5-f0d4ce32dc6c",
            "name": "Get Auth",
            "request": {
              "url": {
                "protocol": "https",
                "path": [
                  "basic-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              },
              "auth": {
                "type": "basic",
                "basic": [
                  {
                    "type": "string",
                    "value": "password",
                    "key": "password"
                  },
                  {
                    "type": "string",
                    "value": "postman",
                    "key": "username"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3bc7a22b-9cde-42a6-9873-49a2674961a0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"athentication should be true\", function () {\r",
                    "    var jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData.authenticated).to.eql(true);\r",
                    "});\r",
                    "pm.test(\"Status code is 401\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "6e69b1ce-9883-40a9-ae83-ed479f149357"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "3010170d-c7b1-4c3b-96e4-20f2afce17a2",
      "name": "postman_collection",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "2d167b03-8e09-4150-9bd4-bb222ccecc59",
    "values": []
  },
  "globals": {
    "id": "7c29cf30-039f-4d0e-8497-36aa89fb9db6",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 376,
      "responseMin": 153,
      "responseMax": 808,
      "responseSd": 305.5235942880135,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683711992063,
      "completed": 1683711993453
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f5b2c521-2b7e-43ee-a11f-d69e82e363eb",
          "httpRequestId": "662dc455-918b-4cf1-8ee6-a151c023efbf"
        },
        "item": {
          "id": "0ca2b516-4cb7-44b8-b373-2007eb72c236",
          "name": "get queryParam",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "get"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2\n"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f4307e9a-e69c-411d-b79d-a6a1e302ff80",
                "type": "text/javascript",
                "exec": [
                  "////1\r",
                  "pm.test(\"check Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "///2\r",
                  "pm.test(\"check the args foo2 \", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.args.foo2).to.eql(\"bar2\\n\");\r",
                  "});\r",
                  "///3\r",
                  "pm.test(\"check the args foo1\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.args.foo1).to.eql(\"bar1\");\r",
                  "});\r",
                  "///4\r",
                  "pm.test(\"check the url  \", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.url).to.eql( \"https://postman-echo.com/get?foo1=bar1&foo2=bar2%0A\");\r",
                  "});\r",
                  "///5\r",
                  "pm.test(\"check the headers host \", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.headers.host).to.eql(\"postman-echo.com\");\r",
                  "});\r",
                  "///6\r",
                  "var jsonData=pm.response.json()\r",
                  "var cookie =jsonData.headers.cookie\r",
                  "pm.test(\"check the headers cookie\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.headers.cookie).to.eql(cookie);\r",
                  "});\r",
                  "///7\r",
                  "var token =jsonData.headers.postman-token\r",
                  "pm.test(\"check the headers postman-token \", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.headers.postman-token).to.eql(token);\r",
                  "});\r",
                  "///8\r",
                  "pm.test(\"check if the response contains x-amzn-trace-id\", function () {\r",
                  "    pm.expect(pm.response.text()).to.include(\"x-amzn-trace-id\");\r",
                  "});\r",
                  "///9\r",
                  "var idTrace = pm.response.headers.get(\"hox-amzn-trace-id\");\r",
                  "pm.test(\"check traceId Headers\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(pm.response.headers.get(\"hox-amzn-trace-id\")).to.eql(idTrace);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5bbc17fa-27ea-4972-a8a5-8add47294fbb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "get"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2%0A"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b57d6de8-ca13-49de-89e7-9d5da7223158",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "bb02d792-1638-4998-aea7-affbaddb7b6f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 10 May 2023 08:46:35 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "509"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1fd-oPYys0sTY6tOu27egK9S3+53eXU\""
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3As56L_hd33OmGq5JU5uAgA1YCcl5TpaeS.U5owD5jhtpInQGZ1E53dWTtWHRM2cCzNRwJ4BFqP3a8; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              32,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              32,
              34,
              98,
              97,
              114,
              50,
              92,
              110,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              52,
              53,
              98,
              53,
              57,
              101,
              98,
              45,
              49,
              57,
              52,
              56,
              50,
              53,
              98,
              98,
              53,
              48,
              52,
              50,
              99,
              56,
              99,
              54,
              54,
              101,
              99,
              53,
              97,
              51,
              52,
              55,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              57,
              46,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              98,
              53,
              55,
              100,
              54,
              100,
              101,
              56,
              45,
              99,
              97,
              49,
              51,
              45,
              52,
              57,
              100,
              101,
              45,
              56,
              57,
              101,
              55,
              45,
              57,
              100,
              53,
              100,
              97,
              55,
              50,
              50,
              51,
              49,
              53,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              103,
              101,
              116,
              63,
              102,
              111,
              111,
              49,
              61,
              98,
              97,
              114,
              49,
              38,
              102,
              111,
              111,
              50,
              61,
              98,
              97,
              114,
              50,
              37,
              48,
              65,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 808,
          "responseSize": 509
        },
        "id": "0ca2b516-4cb7-44b8-b373-2007eb72c236",
        "assertions": [
          {
            "assertion": "check Status code is 200",
            "skipped": false
          },
          {
            "assertion": "check the args foo2 ",
            "skipped": false
          },
          {
            "assertion": "check the args foo1",
            "skipped": false
          },
          {
            "assertion": "check the url  ",
            "skipped": false
          },
          {
            "assertion": "check the headers host ",
            "skipped": false
          },
          {
            "assertion": "check the headers cookie",
            "skipped": false
          },
          {
            "assertion": "check the headers postman-token ",
            "skipped": false
          },
          {
            "assertion": "check if the response contains x-amzn-trace-id",
            "skipped": false
          },
          {
            "assertion": "check traceId Headers",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f7d6b7d7-6d2a-43c6-823a-657e1b9b20cd",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9343a992-c6e8-4bad-a0b1-a0d4cf168fa1"
        },
        "item": {
          "id": "f5e1dee9-015e-4f30-b264-08ca678daefd",
          "name": "Get Auth status 401",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "basic-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "type": "string",
                  "value": "fsdfs",
                  "key": "password"
                },
                {
                  "type": "string",
                  "value": "postman",
                  "key": "username"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f8139261-ff78-42ce-a044-c75946ed060f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 401\", function () {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});"
                ],
                "_lastExecutionId": "9ee977ee-4efb-41c3-ad3e-fbf6078ff505"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "basic-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic cG9zdG1hbjpmc2Rmcw==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9937c92e-acfc-4e07-8e31-307c1b0da86c",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3As56L_hd33OmGq5JU5uAgA1YCcl5TpaeS.U5owD5jhtpInQGZ1E53dWTtWHRM2cCzNRwJ4BFqP3a8",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "fsdfs",
                "key": "password"
              },
              {
                "type": "string",
                "value": "postman",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "edde5f84-f0b4-49dc-96e2-d8c25b4fb813",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 10 May 2023 08:46:35 GMT"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "WWW-Authenticate",
              "value": "Basic realm=\"Users\""
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ARMzr_voqhp3y7b3XoEmRjFCzzgwmHn8u.Qlm97rdPOdZxrC6UN%2BxqAGKEjNNNClO6dRHlgs9RN7U; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 167,
          "responseSize": 12
        },
        "id": "f5e1dee9-015e-4f30-b264-08ca678daefd",
        "assertions": [
          {
            "assertion": "Status code is 401",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c6cb9ac2-c475-4e1f-b635-0288cf2b1a72",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "afef4ef1-d5bd-4344-9bd4-14ebcd295667"
        },
        "item": {
          "id": "d4d80458-325e-447b-96a5-f0d4ce32dc6c",
          "name": "Get Auth",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "basic-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "type": "string",
                  "value": "password",
                  "key": "password"
                },
                {
                  "type": "string",
                  "value": "postman",
                  "key": "username"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3bc7a22b-9cde-42a6-9873-49a2674961a0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"athentication should be true\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.authenticated).to.eql(true);\r",
                  "});\r",
                  "pm.test(\"Status code is 401\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "6e69b1ce-9883-40a9-ae83-ed479f149357"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "basic-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic cG9zdG1hbjpwYXNzd29yZA==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9a6b5973-5e0f-44d8-96f9-8c9f7ae882ed",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ARMzr_voqhp3y7b3XoEmRjFCzzgwmHn8u.Qlm97rdPOdZxrC6UN%2BxqAGKEjNNNClO6dRHlgs9RN7U",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "password",
                "key": "password"
              },
              {
                "type": "string",
                "value": "postman",
                "key": "username"
              }
            ]
          }
        },
        "response": {
          "id": "cbdf6c91-4a2c-44d5-982f-73a41a1bb25c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 10 May 2023 08:46:35 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "27"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1b-o64KRFi1Uw+73hnrS1UFKUVInOY\""
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AFvESos8LEt2uwoDpV4een2b6HrmfsNx1.Sn%2FdyDM2GUu5tEsyk9wezkviLeRNdsMbI9mr8lHhezw; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 153,
          "responseSize": 27
        },
        "id": "d4d80458-325e-447b-96a5-f0d4ce32dc6c",
        "assertions": [
          {
            "assertion": "athentication should be true",
            "skipped": false
          },
          {
            "assertion": "Status code is 401",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 548
    },
    "failures": [],
    "error": null
  }
}